#!/usr/bin/env node

/**
 * Build Configuration Script
 *
 * Generates /public/js/config.js from environment variables.
 * This allows client-side code to access public configuration
 * without hard-coding secrets in the repository.
 *
 * Usage:
 *   node scripts/build-config.js
 *   npm run build:config
 */

import fs from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';

// Get current directory (ESM equivalent of __dirname)
const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

// Load environment variables from .env file if it exists
const dotenvPath = path.join(__dirname, '..', '.env');
if (fs.existsSync(dotenvPath)) {
  const dotenvContent = fs.readFileSync(dotenvPath, 'utf8');
  dotenvContent.split('\n').forEach(line => {
    const trimmed = line.trim();
    if (trimmed && !trimmed.startsWith('#')) {
      const [key, ...valueParts] = trimmed.split('=');
      if (key && valueParts.length > 0) {
        const value = valueParts.join('=').trim();
        // Only set if not already in environment
        if (!process.env[key]) {
          process.env[key] = value;
        }
      }
    }
  });
}

// Get required environment variables
const SUPABASE_URL = process.env.SUPABASE_URL;
const SUPABASE_ANON_KEY = process.env.SUPABASE_ANON_KEY;

// Validate required variables
if (!SUPABASE_URL) {
  console.error('❌ Error: SUPABASE_URL is not set in environment variables');
  console.error('   Please set it in your .env file or environment');
  process.exit(1);
}

if (!SUPABASE_ANON_KEY) {
  console.error('❌ Error: SUPABASE_ANON_KEY is not set in environment variables');
  console.error('   Please set it in your .env file or environment');
  process.exit(1);
}

// Validate SUPABASE_ANON_KEY is not a placeholder
if (SUPABASE_ANON_KEY.includes('your_') || SUPABASE_ANON_KEY.includes('placeholder')) {
  console.error('❌ Error: SUPABASE_ANON_KEY appears to be a placeholder value');
  console.error('   Please set a real Supabase anon key in your .env file');
  console.error('   Get your key from: https://app.supabase.com > Project Settings > API');
  process.exit(1);
}

// Generate config.js content
const configContent = `/**
 * Client-Side Configuration
 *
 * This file is AUTO-GENERATED by scripts/build-config.js
 * DO NOT EDIT MANUALLY - Changes will be overwritten
 *
 * Generated: ${new Date().toISOString()}
 */

export const config = {
  supabase: {
    url: '${SUPABASE_URL}',
    anonKey: '${SUPABASE_ANON_KEY}'
  }
};

// Default export
export default config;
`;

// Write config.js
const configPath = path.join(__dirname, '..', 'public', 'js', 'config.js');
fs.writeFileSync(configPath, configContent, 'utf8');

console.log('✅ Configuration file generated successfully');
console.log(`   Location: ${configPath}`);
console.log(`   Supabase URL: ${SUPABASE_URL}`);
console.log(`   Anon Key: ${SUPABASE_ANON_KEY.substring(0, 20)}...`);
console.log('');
console.log('⚠️  Remember: config.js is gitignored and should not be committed');
